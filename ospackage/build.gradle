buildscript {
    repositories { jcenter() }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:1.12.+'
        classpath 'com.google.guava:guava:17.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:1.12.+'
        classpath 'com.netflix.nebula:nebula-core:1.12.+' // For Download
    }
}

import nebula.plugin.info.reporting.*
subprojects {

    apply plugin: 'info'
    apply plugin: 'os-package'

    // Ensure at least one file is included in package, always
    tasks.withType(InfoPropertiesFile) { propTask ->
        ospackage {
            from(propTask) {
                into('/etc')
            }
        }
    }
}

task writeBoto << {
    def home = new File(System.getenv('HOME'))
    def csvFile = new File(home, 'credentials.csv')
    def line = csvFile.text.split('\n')[1]
    def parts = line.split(',')

    def cfgFile = new File(home, 'boto.cfg')
    cfgFile.withWriter { out ->
        out << """
            [Credentials]
            aws_access_key_id = ${parts[1]}
            aws_secret_access_key = ${parts[2]}
            """.stripIndent()
    }
}